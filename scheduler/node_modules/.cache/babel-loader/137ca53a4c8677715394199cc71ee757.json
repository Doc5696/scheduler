{"ast":null,"code":"import _defineProperty from \"/home/petro/ws/scheduler/scheduler/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_POSTS, CREATE_POST, UPDATE_POST, DELETE_POST } from './actions';\nconst initialState = {\n  posts: []\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case GET_POSTS:\n      {\n        return _objectSpread({}, state, {\n          posts: [...action.data]\n        });\n      }\n\n    case CREATE_POST:\n      {\n        return _objectSpread({}, state, {\n          posts: [...state.posts, action.newPost]\n        });\n      }\n\n    case UPDATE_POST:\n      {\n        const newPosts = [...state.posts];\n        newPosts[newPosts.findIndex(el => el._id === action.updatedPost._id)] = action.updatedPost;\n        return _objectSpread({}, state, {\n          posts: [...newPosts]\n        });\n      }\n\n    case DELETE_POST:\n      {\n        return _objectSpread({}, state, {\n          posts: [...state.posts.filter(el => el._id !== action.deletedPost)]\n        });\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/petro/ws/scheduler/scheduler/src/App/services/reducer.js"],"names":["GET_POSTS","CREATE_POST","UPDATE_POST","DELETE_POST","initialState","posts","state","action","type","data","newPost","newPosts","findIndex","el","_id","updatedPost","filter","deletedPost"],"mappings":";;;;;;AAAA,SACEA,SADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,WAJF,QAKO,WALP;AAOA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;AAIA,gBAAe,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,SAAL;AAAgB;AACd,iCACKM,KADL;AAEED,UAAAA,KAAK,EAAE,CAAE,GAAGE,MAAM,CAACE,IAAZ;AAFT;AAID;;AACD,SAAKR,WAAL;AAAkB;AAChB,iCACKK,KADL;AAEED,UAAAA,KAAK,EAAE,CAAE,GAAGC,KAAK,CAACD,KAAX,EAAkBE,MAAM,CAACG,OAAzB;AAFT;AAID;;AACD,SAAKR,WAAL;AAAkB;AAChB,cAAMS,QAAQ,GAAG,CAAE,GAAGL,KAAK,CAACD,KAAX,CAAjB;AACAM,QAAAA,QAAQ,CACNA,QAAQ,CAACC,SAAT,CAAmBC,EAAE,IAAIA,EAAE,CAACC,GAAH,KAAWP,MAAM,CAACQ,WAAP,CAAmBD,GAAvD,CADM,CAAR,GAEIP,MAAM,CAACQ,WAFX;AAGA,iCACKT,KADL;AAEED,UAAAA,KAAK,EAAE,CAAE,GAAGM,QAAL;AAFT;AAID;;AACD,SAAKR,WAAL;AAAkB;AAChB,iCACKG,KADL;AAEED,UAAAA,KAAK,EAAE,CACL,GAAGC,KAAK,CAACD,KAAN,CAAYW,MAAZ,CAAmBH,EAAE,IAAIA,EAAE,CAACC,GAAH,KAAWP,MAAM,CAACU,WAA3C,CADE;AAFT;AAMD;;AACD;AACE,aAAOX,KAAP;AAhCJ;AAkCD,CAnCD","sourcesContent":["import {\n  GET_POSTS,\n  CREATE_POST,\n  UPDATE_POST,\n  DELETE_POST\n} from './actions'\n\nconst initialState = {\n  posts: []\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_POSTS: {\n      return {\n        ...state,\n        posts: [ ...action.data ]\n      }\n    }\n    case CREATE_POST: {\n      return {\n        ...state,\n        posts: [ ...state.posts, action.newPost ]\n      }\n    }\n    case UPDATE_POST: {\n      const newPosts = [ ...state.posts ]\n      newPosts[\n        newPosts.findIndex(el => el._id === action.updatedPost._id)\n      ] = action.updatedPost\n      return {\n        ...state,\n        posts: [ ...newPosts ]\n      }\n    }\n    case DELETE_POST: {\n      return {\n        ...state,\n        posts: [\n          ...state.posts.filter(el => el._id !== action.deletedPost)\n        ]\n      }\n    }\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}